package org.fisco.bcos.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;
import org.fisco.bcos.web3j.abi.EventEncoder;
import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.Event;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.crypto.EncryptType;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.Log;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple1;
import org.fisco.bcos.web3j.tuples.generated.Tuple7;
import org.fisco.bcos.web3j.tuples.generated.Tuple8;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;
import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class Netcon extends Contract {
    public static final String[] BINARY_ARRAY = {"","","","6040513d6000823e3d601f19601f820116820180604052506020811015612d0b57600080fd5b810190808051640100000000811115612d2357600080fd5b82810190506020810184811115612d3957600080fd5b8151856001820283011164010000000082111715612d5657600080fd5b50509291905050508373ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260068152602001807f6170706c79610000000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b158015612dfe57600080fd5b505af1158015612e12573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015612e3c57600080fd5b810190808051640100000000811115612e5457600080fd5b82810190506020810184811115612e6a57600080fd5b8151856001820283011164010000000082111715612e8757600080fd5b50509291905050508473ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260068152602001807f6170706c79620000000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b158015612f2f57600080fd5b505af1158015612f43573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015612f6d57600080fd5b810190808051640100000000811115612f8557600080fd5b82810190506020810184811115612f9b57600080fd5b8151856001820283011164010000000082111715612fb857600080fd5b50509291905050508573ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260048152602001807f6164647200000000000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b15801561306057600080fd5b505af1158015613074573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561309e57600080fd5b8101908080516401000000008111156130b657600080fd5b828101905060208101848111156130cc57600080fd5b81518560018202830111640100000000821117156130e957600080fd5b50509291905050508673ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260048152602001807f6172656100000000000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b15801561319157600080fd5b505af11580156131a5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156131cf57600080fd5b8101908080516401000000008111156131e757600080fd5b828101905060208101848111156131fd57600080fd5b815185600182028301116401000000008211171561321a57600080fd5b50509291905050508773ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b1580156132c257600080fd5b505af11580156132d6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561330057600080fd5b81019080805164010000000081111561331857600080fd5b8281019050602081018481111561332e57600080fd5b815185600182028301116401000000008211171561334b57600080fd5b50509291905050508797509c509c509c509c509c509c509c509c505b5050505050919395975091939597565b6000600154905090565b600080600061100191508173ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260088152602001807f745f6e6574636f6e000000000000000000000000000000000000000000000000815250602001915050602060405180830381600087803b15801561342b57600080fd5b505af115801561343f573d6000803e3d6000fd5b505050506040513d602081101561345557600080fd5b81019080805190602001909291905050509050809250505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106134b157805160ff19168380011785556134df565b828001600101855582156134df579182015b828111156134de5782518255916020019190600101906134c3565b5b5090506134ec91906134f0565b5090565b61351291905b8082111561350e5760008160009055506001016134f6565b5090565b905600a165627a7a72305820eaa2b577a842b6250eb9f588998e68b86ee96498fd54d88da7bc78fd554397bf0029"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"value\",\"type\":\"string\"}],\"name\":\"queryByNetconId\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"netconid\",\"type\":\"string\"},{\"name\":\"applya\",\"type\":\"string\"},{\"name\":\"applyb\",\"type\":\"string\"},{\"name\":\"addr\",\"type\":\"string\"},{\"name\":\"area\",\"type\":\"string\"},{\"name\":\"balance\",\"type\":\"string\"}],\"name\":\"insert\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"num\",\"type\":\"int256\"}],\"name\":\"getIdByNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"value\",\"type\":\"string\"}],\"name\":\"queryById\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ret\",\"type\":\"int256\"},{\"indexed\":true,\"name\":\"netconid\",\"type\":\"string\"}],\"name\":\"SaveEvent\",\"type\":\"event\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);

    public static final String[] SM_BINARY_ARRAY = {"","","00fd5b505050506040513d6020811015611cfe57600080fd5b8101908080519060200190929190505050915060008273ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611d7757600080fd5b505af1158015611d8b573d6000803e3d6000fd5b505050506040513d6020811015611da157600080fd5b81019080805190602001909291905050501415611e68577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80905060206040519081016040528060008152506020604051908101604052806000815250602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250602060405190810160405280600081525060206040519081016040528060008152509c509c509c509c509c509c509c509c50612782565b8173ffffffffffffffffffffffffffffffffffffffff16633dd2b61460006040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015611ed857600080fd5b505af1158015611eec573d6000803e3d6000fd5b505050506040513d6020811015611f0257600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260028152602001807f6964000000000000000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b158015611fb757600080fd5b505af1158015611fcb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611ff557600080fd5b81019080805164010000000081111561200d57600080fd5b8281019050602081018481111561202357600080fd5b815185600182028301116401000000008211171561204057600080fd5b50509291905050508273ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260088152602001807f6e6574636f6e6964000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b1580156120e857600080fd5b505af11580156120fc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561212657600080fd5b81019080805164010000000081111561213e57600080fd5b8281019050602081018481111561215457600080fd5b815185600182028301116401000000008211171561217157600080fd5b50509291905050508373ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260068152602001807f6170706c79610000000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b15801561221957600080fd5b505af115801561222d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561225757600080fd5b81019080805164010000000081111561226f57600080fd5b8281019050602081018481111561228557600080fd5b81518560018202830111640100000000821117156122a257600080fd5b50509291905050508473ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260068152602001807f6170706c79620000000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b15801561234a57600080fd5b505af115801561235e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561238857600080fd5b8101908080516401000000008111156123a057600080fd5b828101905060208101848111156123b657600080fd5b81518560018202830111640100000000821117156123d357600080fd5b50509291905050508573ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260048152602001807f6164647200000000000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b15801561247b57600080fd5b505af115801561248f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156124b957600080fd5b8101908080516401000000008111156124d157600080fd5b828101905060208101848111156124e757600080fd5b815185600182028301116401000000008211171561250457600080fd5b50509291905050508673ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260048152602001807f6172656100000000000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b1580156125ac57600080fd5b505af11580156125c0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156125ea57600080fd5b81019080805164010000000081111561260257600080fd5b8281019050602081018481111561261857600080fd5b815185600182028301116401000000008211171561263557600080fd5b50509291905050508773ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b1580156126dd57600080fd5b505af11580156126f1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561271b57600080fd5b81019080805164010000000081111561273357600080fd5b8281019050602081018481111561274957600080fd5b815185600182028301116401000000008211171561276657600080fd5b50509291905050508797509c509c509c509c509c509c509c509c505b5050505050919395975091939597565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561283b5780601f106128105761010080835404028352916020019161283b565b820191906000526020600020905b81548152906001019060200180831161281e57829003601f168201915b50505050509050919050565b600080600080600080935061285a613381565b92508273ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156128c057600080fd5b505af11580156128d4573d6000803e3d6000fd5b505050506040513d60208110156128ea57600080fd5b810190808051906020019092919050505091508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48d6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260028152602001807f6964000000000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b838110156129bd5780820151818401526020810190506129a2565b50505050905090810190601f1680156129ea5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612a0a57600080fd5b505af1158015612a1e573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48c6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260088152602001807f6e6574636f6e6964000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015612ae2578082015181840152602081019050612ac7565b50505050905090810190601f168015612b0f5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612b2f57600080fd5b505af1158015612b43573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48b6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260068152602001807f6170706c79610000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015612c07578082015181840152602081019050612bec565b50505050905090810190601f168015612c345780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612c5457600080fd5b505af1158015612c68573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48a6040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260068152602001807f6170706c79620000000000000000000000000000000000","000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015612d2c578082015181840152602081019050612d11565b50505050905090810190601f168015612d595780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612d7957600080fd5b505af1158015612d8d573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260048152602001807f6164647200000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015612e51578082015181840152602081019050612e36565b50505050905090810190601f168015612e7e5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612e9e57600080fd5b505af1158015612eb2573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260048152602001807f6172656100000000000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b83811015612f76578082015181840152602081019050612f5b565b50505050905090810190601f168015612fa35780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015612fc357600080fd5b505af1158015612fd7573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb4876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260078152602001807f62616c616e636500000000000000000000000000000000000000000000000000815250602001838103825284818151815260200191508051906020019080838360005b8381101561309b578082015181840152602081019050613080565b50505050905090810190601f1680156130c85780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156130e857600080fd5b505af11580156130fc573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16634c6f30c06000846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156132055780601f106131da57610100808354040283529160200191613205565b820191906000526020600020905b8154815290600101906020018083116131e857829003601f168201915b50509350505050602060405180830381600087803b15801561322657600080fd5b505af115801561323a573d6000803e3d6000fd5b505050506040513d602081101561325057600080fd5b8101908080519060200190929190505050905060018114156132b1576001600081548092919060010191905055508b60026000600154815260200190815260200160002090805190602001906132a7929190613470565b50600093506132d5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93505b8a6040518082805190602001908083835b60208310151561330b57805182526020820191506020810190506020830392506132e6565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207f7956391947dc4eb58dc7dca1581849e0234a6432607a321a39c6868d687763df856040518082815260200191505060405180910390a283945050505050979650505050505050565b600080600061100191508173ffffffffffffffffffffffffffffffffffffffff166359a48b656040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260088152602001807f745f6e6574636f6e000000000000000000000000000000000000000000000000815250602001915050602060405180830381600087803b15801561342b57600080fd5b505af115801561343f573d6000803e3d6000fd5b505050506040513d602081101561345557600080fd5b81019080805190602001909291905050509050809250505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106134b157805160ff19168380011785556134df565b828001600101855582156134df579182015b828111156134de5782518255916020019190600101906134c3565b5b5090506134ec91906134f0565b5090565b61351291905b8082111561350e5760008160009055506001016134f6565b5090565b905600a165627a7a72305820e2a6310ed1f730ebbf3c5a135b25008f721f0a8f8ee888dff6c443b1ea206b870029"};

    public static final String SM_BINARY = String.join("", SM_BINARY_ARRAY);

    public static final String FUNC_QUERYBYNETCONID = "queryByNetconId";

    public static final String FUNC_INSERT = "insert";

    public static final String FUNC_GETIDBYNUMBER = "getIdByNumber";

    public static final String FUNC_QUERYBYID = "queryById";

    public static final String FUNC_GETNUMBER = "getNumber";

    public static final Event SAVEEVENT_EVENT = new Event("SaveEvent", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>(true) {}));
    ;

    @Deprecated
    protected Netcon(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Netcon(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Netcon(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Netcon(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static String getBinary() {
        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public static TransactionDecoder getTransactionDecoder() {
        return transactionDecoder;
    }

    public RemoteCall<Tuple8<BigInteger, String, String, String, String, String, String, String>> queryByNetconId(String value) {
        final Function function = new Function(FUNC_QUERYBYNETCONID, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(value)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple8<BigInteger, String, String, String, String, String, String, String>>(
                new Callable<Tuple8<BigInteger, String, String, String, String, String, String, String>>() {
                    @Override
                    public Tuple8<BigInteger, String, String, String, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<BigInteger, String, String, String, String, String, String, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (String) results.get(6).getValue(), 
                                (String) results.get(7).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> insert(String id, String netconid, String applya, String applyb, String addr, String area, String balance) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(netconid), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(applya), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(applyb), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(area), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(balance)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void insert(String id, String netconid, String applya, String applyb, String addr, String area, String balance, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(netconid), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(applya), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(applyb), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(area), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(balance)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String insertSeq(String id, String netconid, String applya, String applyb, String addr, String area, String balance) {
        final Function function = new Function(
                FUNC_INSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(netconid), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(applya), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(applyb), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(addr), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(area), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(balance)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple7<String, String, String, String, String, String, String> getInsertInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple7<String, String, String, String, String, String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (String) results.get(4).getValue(), 
                (String) results.get(5).getValue(), 
                (String) results.get(6).getValue()
                );
    }

    public Tuple1<BigInteger> getInsertOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_INSERT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public RemoteCall<TransactionReceipt> getIdByNumber(BigInteger num) {
        final Function function = new Function(
                FUNC_GETIDBYNUMBER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(num)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void getIdByNumber(BigInteger num, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_GETIDBYNUMBER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(num)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getIdByNumberSeq(BigInteger num) {
        final Function function = new Function(
                FUNC_GETIDBYNUMBER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(num)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple1<BigInteger> getGetIdByNumberInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_GETIDBYNUMBER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public Tuple1<String> getGetIdByNumberOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETIDBYNUMBER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public RemoteCall<Tuple8<BigInteger, String, String, String, String, String, String, String>> queryById(String value) {
        final Function function = new Function(FUNC_QUERYBYID, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(value)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple8<BigInteger, String, String, String, String, String, String, String>>(
                new Callable<Tuple8<BigInteger, String, String, String, String, String, String, String>>() {
                    @Override
                    public Tuple8<BigInteger, String, String, String, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<BigInteger, String, String, String, String, String, String, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (String) results.get(6).getValue(), 
                                (String) results.get(7).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> getNumber() {
        final Function function = new Function(
                FUNC_GETNUMBER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void getNumber(TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_GETNUMBER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String getNumberSeq() {
        final Function function = new Function(
                FUNC_GETNUMBER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple1<BigInteger> getGetNumberOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_GETNUMBER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<SaveEventEventResponse> getSaveEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SAVEEVENT_EVENT, transactionReceipt);
        ArrayList<SaveEventEventResponse> responses = new ArrayList<SaveEventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            SaveEventEventResponse typedResponse = new SaveEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.netconid = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.ret = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void registerSaveEventEventLogFilter(String fromBlock, String toBlock, List<String> otherTopics, EventLogPushWithDecodeCallback callback) {
        String topic0 = EventEncoder.encode(SAVEEVENT_EVENT);
        registerEventLogPushFilter(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void registerSaveEventEventLogFilter(EventLogPushWithDecodeCallback callback) {
        String topic0 = EventEncoder.encode(SAVEEVENT_EVENT);
        registerEventLogPushFilter(ABI,BINARY,topic0,callback);
    }

    @Deprecated
    public static Netcon load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Netcon(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Netcon load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Netcon(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Netcon load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Netcon(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Netcon load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Netcon(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Netcon> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Netcon.class, web3j, credentials, contractGasProvider, getBinary(), "");
    }

    public static RemoteCall<Netcon> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Netcon.class, web3j, transactionManager, contractGasProvider, getBinary(), "");
    }

    @Deprecated
    public static RemoteCall<Netcon> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Netcon.class, web3j, credentials, gasPrice, gasLimit, getBinary(), "");
    }

    @Deprecated
    public static RemoteCall<Netcon> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Netcon.class, web3j, transactionManager, gasPrice, gasLimit, getBinary(), "");
    }

    public static class SaveEventEventResponse {
        public Log log;

        public byte[] netconid;

        public BigInteger ret;
    }
}
